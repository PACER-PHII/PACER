version: '3'
services:
  cql-execution:
    build:
      context: ./cql-execution-service
    ports:
      - "8085:8080"
  cql-storage:
    depends_on:
      - db
    build:
      context: ./cqlstorage
    ports:
      - "8080:8080"
    environment:
      JDBC_URL: "jdbc:postgresql://db:5432/db"
      JDBC_USERNAME: "postgres"
      JDBC_PASSWORD: "postgres"
    command: ["./wait-for-it.sh", "db:5432", "--timeout=300", "--" , "java", "-jar", "/usr/src/app/CQLStorage.jar"]

  db:
    build:
     context: ./db
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "db"
  fhir-filter:
    build:
      context: ./fhirfilter
    ports:
      - "8081:8080"
    environment:
      BASIC_AUTH_USER: "fhirFilter"
      BASIC_AUTH_PASSWORD: "password"
      
  job-management-system:
    depends_on:
      - db
    build:
      context: ./jobmanagementsystem
    ports:
      - "443:443"
    environment:
      JDBC_URL: "jdbc:postgresql://db:5432/db"
      JDBC_USER: "postgres"
      JDBC_PASSWORD: "postgres"
      BASIC_USERNAME: "username"
      BASIC_PASSWORD: "password"
      RESULTS_MANAGER_URL: "http://results-manager:8080/ResultsManager/"
      #Uses 'true' or 'false' to enable or disable ssl
      SSL_ENABLED: "true"
      #Provide an .p12 SSL Keystore file for JMS to use for SSL
      SSL_KEYSTORE_FILE: ""
      #When created, the p12 file will prompt user to provide a password
      SSL_KEYSTORE_PASSWORD: ""
      #Unique name for the keystore within the program. Same name as the file
      SSL_KEYSTORE_ALIAS: ""
      # command: ["./wait-for-it.sh", "db:5432", "--timeout=300", "--" ,"java","-jar", "/usr/src/app/JobManagementSystem.jar"]

  nginx-cache:
    depends_on:
      - translateconcept 
    build:
      context: ./nginx-cache
    command: ["./wait-for-it.sh", "translateconcept:8080", "--timeout=300", "--" ,"nginx", "-g", "daemon off;"]

 
  results-manager:
    depends_on:
      - job-management-system
      - cql-execution
      - cql-storage
    build:
      context: ./resultsmanager
    ports:
      - "8084:8080"
    environment:
      #Change to fhir data provider within the internal EHR
      CQL_EXECUTION_DATA_SERVICE: "https://apps.hdap.gatech.edu/omoponfhir3/fhir"
      #Basic authentication credentials to the data service
      CQL_EXECUTION_DATA_USER: "client"
      CQL_EXECUTION_DATA_PASS: "secret"
      #Change if you want to use a seperate terminology service
      CQL_EXECUTION_TERMINOLOGY_SERVICE: "https://cts.nlm.nih.gov/fhir/"
      #Authorization credentials to the terminology service
      #local code translation service
      CQL_EXECUTION_CODEMAPPER_SERVICE: "http://nginx-cache:8080/fhir/"
      CQL_EXECUTION_CODEMAPPER_USER: "client" #Update to your translate server credentials
      CQL_EXECUTION_CODEMAPPER_PASS: "secret" #Update to your translate server credentials
      CQL_EXECUTION_CODEMAPPER_SYSTEMS_MAP: '{}'#'{"http://www.nlm.nih.gov/research/umls/rxnorm":"http://hl7.org/fhir/ndfrt"}'
      CQL_EXECUTION_EPIC_CLIENT_ID: "someclientid" #Leave blank if no epic-client-id is needed.
      CQL_EXECUTION_TERMINOLOGY_USER: "jduke99" #Update to your terminology credentials
      CQL_EXECUTION_TERMINOLOGY_PASS: "v6R4*SsU39" #Update to your terminology credentials
      CQL_EXECUTION_URL: "http://cql-execution:8080/cql"
      CQL_STORAGE_URL: "https://cql-storage:8080/CQLStorage/"
      FHIR_FILTER_URL: "fhir-filter"
      IS_EPIC: "true"

  translateconcept:
    depends_on:
      - db
      - cql-storage
    build:
      context: ./omoponfhir-omopv5-stu3-conceptmapping-server
    ports:
      - "8083:8080"
    environment:
      JDBC_URL: "jdbc:postgresql://db:5432/postgres?currentSchema=omop_v5"
      JDBC_USERNAME: "omop_v5"
      JDBC_PASSWORD: "i3lworks"
      SERVERBASE_URL: "http://translateconcept:8080/omoponfhir-conceptmapping/fhir"
      LOCAL_PYPASS: "True"
      AUTH_TYPE: "Basic client:secret" #Update to local translate service basic credentials
      MAPPING_TERMINOLOGY_URL: "https://apps.hdap.gatech.edu/gt-fhir/fhir/ConceptMap/" #Update to local translate service
    command: ["./wait-for-it.sh", "db:5432", "--timeout=300", "--" ,"catalina.sh", "run"]

networks:
  default:
    external:
      name: pacer_default

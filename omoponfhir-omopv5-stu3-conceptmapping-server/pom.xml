<!-- Copyright (c) 2019 Georgia Tech Research Institute Licensed under the 
	Apache License, Version 2.0 (the "License"); you may not use this file except 
	in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>edu.gatech.chai</groupId>
	<artifactId>omoponfhir-omopv5-stu3-conceptmapping-server</artifactId>
	<packaging>war</packaging>
	<version>1.0.2</version>

	<name>ConceptMapping RESTful Server</name>

	<repositories>
		<repository>
			<id>local-maven-repo</id>
			<url>file:///${project.basedir}/local-maven-repo</url>
		</repository>
		<repository>
			<id>oss-snapshots</id>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</repository>
	</repositories>

	<properties>
		<hapi_stable_version>3.8.0</hapi_stable_version>
		<hapi_current_version>3.8.0-SNAPSHOT</hapi_current_version>
		<omoponfhir_jpa_version>1.0.2</omoponfhir_jpa_version>
		<omoponfhir_mapping_version>1.0.2</omoponfhir_mapping_version>

		<!-- configure timestamp in MANIFEST.MF for maven-war-provider -->
		<maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss'Z'</maven.build.timestamp.format>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Dependency Versions -->
		<derby_version>10.14.2.0</derby_version>
		<jersey_version>2.25.1</jersey_version>
		<jetty_version>9.4.17.v20190418</jetty_version>
		<hibernate_version>5.4.3.Final</hibernate_version>
		<hibernate_validator_version>5.4.3.Final</hibernate_validator_version>
		<!-- Update lucene version when you update hibernate-search version -->
		<hibernate_search_version>5.11.2.Final</hibernate_search_version>
		<jackson_version>2.9.9</jackson_version>
		<jaxb_api_version>2.3.1</jaxb_api_version>
		<lucene_version>5.5.5</lucene_version>
		<maven_assembly_plugin_version>2.5.3</maven_assembly_plugin_version>
		<maven_license_plugin_version>1.8</maven_license_plugin_version>
		<phloc_schematron_version>2.7.1</phloc_schematron_version>
		<phloc_commons_version>4.4.11</phloc_commons_version>
		<spring_version>5.3.14</spring_version>
		<spring_data_version>2.1.8.RELEASE</spring_data_version>
		<spring-boot.version>2.1.1.RELEASE</spring-boot.version>
		<thymeleaf-version>3.0.9.RELEASE</thymeleaf-version>

		<!-- We are aiming to still work on a very old version of SLF4j even though 
			we depend on the newest, just to be nice to users of the API. This version 
			is tested in the hapi-fhir-cobertura. -->
		<slf4j_target_version>1.6.0</slf4j_target_version>

		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<ebay_cors_filter_version>1.0.1</ebay_cors_filter_version>
	</properties>

	<dependencies>

		<!-- This dependency includes the core HAPI-FHIR classes -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-base</artifactId>
			<version>${hapi_stable_version}</version>
		</dependency>

		<!-- Include the HAPI server framework -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-server</artifactId>
			<version>${hapi_stable_version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/ca.uhn.hapi.fhir/hapi-fhir-client -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-client</artifactId>
			<version>${hapi_stable_version}</version>
		</dependency>

		<!-- At least one "structures" JAR must also be included -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-structures-dstu3</artifactId>
			<version>${hapi_stable_version}</version>
		</dependency>

		<!-- This dependency is used for the "FHIR Tester" web app overlay -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-testpage-overlay</artifactId>
			<version>${hapi_stable_version}</version>
			<type>war</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-testpage-overlay</artifactId>
			<version>${hapi_stable_version}</version>
			<classifier>classes</classifier>
			<scope>provided</scope>
		</dependency>

		<!-- HAPI-FHIR uses Logback for logging support. The logback library is 
			included automatically by Maven as a part of the hapi-fhir-base dependency, 
			but you also need to include a logging library. Logback is used here, but 
			log4j would also be fine. Note on Dependency Versions: This POM file inherits 
			versions (<version>1.0</version>) in each dependency and plugin from the 
			parent pom.xml file. If you want to use this POM as the basis for your own 
			project, you'll need to manually add versions to the dependencies below. -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
		</dependency>

		<!-- Needed for JEE/Servlet support -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>

		<!-- If you are using HAPI narrative generation, you will need to include 
			Thymeleaf as well. Otherwise the following can be omitted. -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>${thymeleaf-version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring5 -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring5</artifactId>
			<version>${thymeleaf-version}</version>
		</dependency>

		<!-- Security OAuth2 related libraries -->
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.common</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.resourceserver</artifactId>
			<version>1.0.0</version>
		</dependency>

		<!-- Used for CORS support -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring_version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring_version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring_version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring_version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring_version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring_version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${spring_data_version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-messaging</artifactId>
			<version>${spring_version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring_version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring_version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring_version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-websocket</artifactId>
			<version>${spring_version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc -->
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>3.27.2.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>2.6.0</version>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.2.6</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate_version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate_version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate_version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate_validator_version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search-orm</artifactId>
			<version>${hibernate_search_version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-envers</artifactId>
			<version>${hibernate_version}</version>
		</dependency>
		<dependency>
			<groupId>edu.gatech.chai</groupId>
			<artifactId>omoponfhir-omopv5-jpabase</artifactId>
			<version>${omoponfhir_jpa_version}</version>
		</dependency>
		<dependency>
			<groupId>edu.gatech.chai</groupId>
			<artifactId>omoponfhir-omopv5-stu3-mapping</artifactId>
			<version>${omoponfhir_mapping_version}</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>${jaxb_api_version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.github.ben-manes.caffeine/caffeine -->
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
			<version>2.7.0</version>
		</dependency>

	</dependencies>

	<build>

		<!-- Tells Maven to name the generated WAR file as restful-server-example.war -->
		<finalName>omoponfhir-omopv5-stu3-conceptmapping-server</finalName>

		<!-- The following is not required for the application to build, but allows 
			you to test it by issuing "mvn jetty:run" from the command line. -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>9.4.19.v20190610</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- Tell Maven which Java source version you want to use -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- The configuration here tells the WAR plugin to include the FHIR Tester 
				overlay. You can omit it if you are not using that feature. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.3</version>
				<configuration>
					<overlays>
						<overlay>
							<groupId>ca.uhn.hapi.fhir</groupId>
							<artifactId>hapi-fhir-testpage-overlay</artifactId>
						</overlay>
					</overlays>
				</configuration>
			</plugin>

			<!-- This plugin is just a part of the HAPI internal build process, you 
				do not need to incude it in your own projects -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>3.0.0-M1</version>
				<configuration>
					<skip>false</skip>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>
